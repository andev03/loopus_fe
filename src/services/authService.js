import axios from "axios";

const API_URL = "https://loopus.nguyenhoangan.site/api/users";

export const register = async (userData) => {
  try {
    const res = await axios.post(`${API_URL}/register`, userData);
    console.log("Register API response:", res.data);

    // ‚úÖ Check backend status
    const success = res.data?.status === 200;

    return {
      status: res.data?.status,
      data: res.data,
      success,
      message: res.data?.message
    };
  } catch (error) {
    console.log("Register error:", error.response?.data || error.message);

    let message = error.response?.data?.message || "ƒêƒÉng k√Ω th·∫•t b·∫°i";

    return {
      status: error.response?.status || 500,
      message,
      success: false
    };
  }
};

export const login = async (username, password) => {
  try {
    const res = await axios.post(`${API_URL}/login`, { username, password });
    console.log("API response:", res.data);

    return {
      status: res.data?.status,
      message: res.data?.message,
      user: res.data?.data,   // üëà user object c√≥ userId
      token: res.data?.token, // üëà n·∫øu backend c√≥ tr·∫£ token
    };
  } catch (error) {
    console.log("Login error:", error.response?.data || error.message);

    let message = error.response?.data?.message || "ƒêƒÉng nh·∫≠p th·∫•t b·∫°i";
    return {
      status: error.response?.status || 500,
      message,
    };
  }
};

export const findUserByEmail = async (email) => {
  try {
    const res = await axios.get(`${API_URL}/find-by-email`, {
      params: { email },
    });
    console.log("findUserByEmail API response:", res.data);

    // üîë Check th√™m c·∫£ res.data.data (ph·∫£i kh√°c null)
    if (res.data?.status === 200 && res.data?.data) {
      const user = res.data.data;
      return {
        success: true,
        userId: user.userId,
        name: user.fullName || user.username || email,
        email: user.username,
        avatar:
          user.avatarUrl ||
          `https://ui-avatars.com/api/?name=${encodeURIComponent(
            user.fullName || email
          )}`,
        message: "T√¨m th·∫•y user",
      };
    } else {
      return {
        success: false,
        userId: null,
        message: "Kh√¥ng t√¨m th·∫•y user", // üöÄ override message cho d·ªÖ hi·ªÉu
      };
    }
  } catch (error) {
    console.log(
      "findUserByEmail error:",
      error.response?.data || error.message
    );
    return {
      success: false,
      userId: null,
      message: error.response?.data?.message || "L·ªói khi t√¨m user",
    };
  }
};
export const updateUserInformation = async (userData, token) => {
  try {
    const res = await axios.put(
      `${API_URL}/update-information`,
      userData,
      {
        headers: {
          Authorization: `Bearer ${token}`,
        },
      }
    );

    console.log("Update profile response:", res.data);

    return {
      success: res.data?.status === 200,
      message: res.data?.message || "C·∫≠p nh·∫≠t th√†nh c√¥ng",
      data: res.data?.data,
    };
  } catch (error) {
    console.log("Update profile error:", error.response?.data || error.message);
    return {
      success: false,
      message: error.response?.data?.message || "C·∫≠p nh·∫≠t th·∫•t b·∫°i",
    };
  }
};




