import axios from "axios";

const API_URL = "https://loopus.nguyenhoangan.site/api/groups";

export const groupService = {
  getGroups: async (userId) => {
    try {
      const res = await axios.get(API_URL, {
        params: { userId },
      });

      // Ki·ªÉm tra HTTP code
      if (res.status === 200) {
        console.log("‚úÖ G·ªçi API getGroups th√†nh c√¥ng");
        console.log("D·ªØ li·ªáu tr·∫£ v·ªÅ:", res.data); // ki·ªÉm tra n·ªôi dung
        return { success: true, data: res.data };
      } else {
        console.log("‚ö†Ô∏è Server tr·∫£ v·ªÅ m√£ kh√°c 200:", res.status);
        return { success: false, data: res.data };
      }
    } catch (error) {
      console.error(
        "‚ùå L·ªói g·ªçi API getGroups:",
        error.response?.data || error.message
      );
      return { success: false, error };
    }
  },

  createGroup: async (data) => {
    try {
      console.log("üì¶ Payload g·ª≠i l√™n:", data);

      const res = await axios.post(API_URL, data);

      console.log("‚úÖ T·∫°o group th√†nh c√¥ng:", res.data);

      return {
        success: true,
        data: res.data?.data || res.data,
        status: res.status,
        message: res.data?.message || "T·∫°o group th√†nh c√¥ng",
      };
    } catch (error) {
      console.error("‚ùå L·ªói t·∫°o group:", {
        status: error.response?.status,
        data: error.response?.data,
      });

      return {
        success: false,
        status: error.response?.status || 500,
        message: error.response?.data?.message || "Kh√¥ng th·ªÉ t·∫°o group",
        error: error.response?.data || error.message,
      };
    }
  },

  addMembers: async (data) => {
    try {
      console.log(
        "üì¶ Payload g·ª≠i l√™n add-members:",
        JSON.stringify(data, null, 2)
      ); // Th√™m log n√†y
      const res = await axios.put(`${API_URL}/add-members`, data);
      console.log("‚úÖ Th√™m member th√†nh c√¥ng:", res.data);
      return { success: true, data: res.data };
    } catch (error) {
      console.error("‚ùå L·ªói th√™m member:", {
        status: error.response?.status,
        data: error.response?.data,
        message: error.message,
      }); // C·∫£i ti·∫øn log l·ªói
      return { success: false, error };
    }
  },

  leaveGroup: async (groupId, userId) => {
  try {
    const res = await axios.delete(`${API_URL}/leave-group`, {
      data: { groupId, userId },      // üëà DELETE ph·∫£i ƒë·ªÉ trong data
      headers: { "Content-Type": "application/json" }
    });
    return { success: true, data: res.data };
  } catch (error) {
    console.error("‚ùå L·ªói r·ªùi nh√≥m:", error.response?.data || error.message);
    return { success: false, error };
  }
},

viewMembers: async (groupId) => {
  try {
    const res = await axios.get(`${API_URL}/view-member`, {
      params: { groupId },
    });
    if (res.status === 200) {
      console.log("‚úÖ G·ªçi API view-member th√†nh c√¥ng:", res.data);
      return { success: true, data: res.data };
    }
    return { success: false, data: res.data };
  } catch (error) {
    console.error("‚ùå L·ªói g·ªçi API view-member:", error.response?.data || error.message);
    return { success: false, error };
  }
},
};
