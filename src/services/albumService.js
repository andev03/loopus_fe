import axios from "axios";
import { getUser } from "../services/storageService";

const API_BASE_URL = "https://loopus.nguyenhoangan.site/api/albums";

export const albumService = {
  // üü¢ T·∫°o album m·ªõi
  createAlbum: async (data) => {
    try {
      const user = await getUser();
      const token = user?.token;

      const res = await axios.post(`${API_BASE_URL}`, data, {
        headers: {
          Accept: "application/json",
          ...(token && { Authorization: `Bearer ${token}` }),
        },
      });

      console.log("‚úÖ T·∫°o album th√†nh c√¥ng:", res.data);
      return { success: true, data: res.data };
    } catch (error) {
      console.error("‚ùå L·ªói t·∫°o album:", error.response?.data || error.message);
      return { success: false, error: error.response?.data };
    }
  },

  // üü° C·∫≠p nh·∫≠t album
  updateAlbum: async (albumId, data) => {
    try {
      const user = await getUser();
      const token = user?.token;

      const res = await axios.put(`${API_BASE_URL}/${albumId}`, data, {
        headers: {
          Accept: "application/json",
          ...(token && { Authorization: `Bearer ${token}` }),
        },
      });

      console.log("‚úÖ C·∫≠p nh·∫≠t album th√†nh c√¥ng:", res.data);
      return { success: true, data: res.data };
    } catch (error) {
      console.error("‚ùå L·ªói c·∫≠p nh·∫≠t album:", error.response?.data || error.message);
      return { success: false, error: error.response?.data };
    }
  },

  // üî¥ X√≥a album
  deleteAlbum: async (albumId) => {
    try {
      const user = await getUser();
      const token = user?.token;

      const res = await axios.delete(`${API_BASE_URL}/${albumId}`, {
        headers: {
          Accept: "application/json",
          ...(token && { Authorization: `Bearer ${token}` }),
        },
      });

      console.log("‚úÖ X√≥a album th√†nh c√¥ng:", res.data);
      return { success: true, data: res.data };
    } catch (error) {
      console.error("‚ùå L·ªói x√≥a album:", error.response?.data || error.message);
      return { success: false, error: error.response?.data };
    }
  },

  // üü¢ Get albums by groupId
  getAlbumsByGroup: async (groupId) => {
    try {
      const user = await getUser();
      const token = user?.token;

      const res = await axios.get(`${API_BASE_URL}/${groupId}`, {
        headers: {
          Accept: "application/json",
          ...(token && { Authorization: `Bearer ${token}` }),
        },
      });

      console.log("‚úÖ L·∫•y album theo group th√†nh c√¥ng:", res.data);
      return { success: true, data: res.data };
    } catch (error) {
      console.error("‚ùå L·ªói l·∫•y album:", error.response?.data || error.message);
      return { success: false, error: error.response?.data };
    }
  },
};
