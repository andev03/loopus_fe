import React, { useState, useEffect } from "react";
import { View, Text, TouchableOpacity, FlatList } from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";
import { Ionicons } from "@expo/vector-icons";
import { router } from "expo-router";
import styles from "./MyWallet.styles";
import { getWalletByUserId } from "../../../services/walletService";

export default function MyWalletScreen() {
  const [balance, setBalance] = useState(0);
  const [transactions, setTransactions] = useState([]);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
  const fetchWallet = async () => {
    try {
      const wallet = await getWalletByUserId();
      if (wallet.success) {
        console.log("üí≥ V√≠ ng∆∞·ªùi d√πng:", wallet.data);
        setBalance(wallet.data.balance || 0);
        setTransactions(wallet.data.transactions || []);
      } else {
        console.warn("‚ö†Ô∏è Kh√¥ng l·∫•y ƒë∆∞·ª£c v√≠:", wallet.message);
      }
    } catch (error) {
      console.error("‚ùå L·ªói fetchWallet:", error);
    } finally {
      setLoading(false); // ‚úÖ lu√¥n t·∫Øt tr·∫°ng th√°i loading
    }
  };
  fetchWallet();
}, []);


  if (loading) {
    return (
      <SafeAreaView style={styles.container}>
        <Text>ƒêang t·∫£i v√≠...</Text>
      </SafeAreaView>
    );
  }

  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.header}>
        <Text style={styles.title}>V√≠ c·ªßa t√¥i</Text>
      </View>

      {/* S·ªë d∆∞ */}
      <View style={styles.balanceCard}>
        <Text style={styles.balanceLabel}>S·ªë d∆∞ hi·ªán t·∫°i</Text>
        <Text style={styles.balanceAmount}>
          {balance.toLocaleString("vi-VN")} VND
        </Text>
      </View>

      {/* N√∫t h√†nh ƒë·ªông */}
      <View style={styles.actionRow}>
        <TouchableOpacity style={styles.actionButton}>
          <Ionicons name="swap-horizontal" size={20} color="#2ECC71" />
          <Text style={styles.actionText}>Chuy·ªÉn ti·ªÅn</Text>
        </TouchableOpacity>

        <TouchableOpacity style={styles.actionButton}>
          <Ionicons name="time-outline" size={20} color="#2ECC71" />
          <Text style={styles.actionText}>L·ªãch s·ª≠</Text>
        </TouchableOpacity>
      </View>

      {/* Danh s√°ch giao d·ªãch */}
      <Text style={styles.sectionTitle}>Giao d·ªãch g·∫ßn ƒë√¢y</Text>
      <FlatList
        data={transactions}
        keyExtractor={(item, index) => item.id || index.toString()}
        contentContainerStyle={styles.transactionList}
        renderItem={({ item }) => (
          <View style={styles.transactionItem}>
            <View>
              <Text style={styles.transactionType}>{item.type}</Text>
              <Text style={styles.transactionDate}>{item.date}</Text>
            </View>
            <Text
              style={[
                styles.transactionAmount,
                { color: item.amount > 0 ? "#2ECC71" : "#E74C3C" },
              ]}
            >
              {item.amount > 0 ? "+" : ""}
              {item.amount.toLocaleString("vi-VN")}‚Ç´
            </Text>
          </View>
        )}
        ListEmptyComponent={
          <Text style={{ textAlign: "center", marginTop: 10, color: "#888" }}>
            Ch∆∞a c√≥ giao d·ªãch n√†o
          </Text>
        }
      />

      {/* N√∫t quay l·∫°i */}
      <TouchableOpacity style={styles.backButton} onPress={() => router.back()}>
        <Ionicons name="arrow-back" size={20} color="#fff" />
        <Text style={styles.backText}>Quay l·∫°i</Text>
      </TouchableOpacity>
    </SafeAreaView>
  );
}
