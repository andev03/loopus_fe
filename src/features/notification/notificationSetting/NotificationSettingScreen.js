import React, { useState } from "react";
import {
  View,
  Text,
  ScrollView,
  Switch,
  TouchableOpacity,
} from "react-native";
import { SafeAreaView } from "react-native-safe-area-context";
import { Ionicons } from "@expo/vector-icons";
import { useNavigation } from "@react-navigation/native";
import styles from "./NotificationSettingScreen.styles";

export default function NotificationSettingsScreen() {
  const navigation = useNavigation();

  // state cho c√°c switch
  const [settings, setSettings] = useState({
    sound: true,
    device: true,
    group: true,
    reminder: true,
    security: true,
    promo: true,
    voucher: true,
    ads: false,
    friends: true,
    changeAdmin: true,
    survey: true,
  });

  // Toggle 1 setting
  const toggleSwitch = (key) => {
    setSettings((prev) => ({ ...prev, [key]: !prev[key] }));
  };

  // üëâ H√†m t·∫Øt t·∫•t c·∫£
  const turnOffAll = () => {
    const allFalse = Object.keys(settings).reduce((acc, key) => {
      acc[key] = false;
      return acc;
    }, {});
    setSettings(allFalse);
  };

  // üëâ H√†m b·∫≠t t·∫•t c·∫£
  const turnOnAll = () => {
    const allTrue = Object.keys(settings).reduce((acc, key) => {
      acc[key] = true;
      return acc;
    }, {});
    setSettings(allTrue);
  };

  return (
    <SafeAreaView style={styles.container}>
      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity onPress={() => navigation.goBack()}>
          <Ionicons name="arrow-back-outline" size={24} color="#fff" />
        </TouchableOpacity>
        <Text style={styles.headerTitle}>C√†i ƒë·∫∑t th√¥ng b√°o</Text>
        <View style={{ width: 24 }} />
      </View>

      <ScrollView
  contentContainerStyle={{ paddingBottom: 40 }}
  showsVerticalScrollIndicator={false}
>
        {/* C√†i ƒë·∫∑t chung */}
        <View style={styles.itemRow}>
          <Text style={styles.itemTitle}>√Çm th√¥ng b√°o</Text>
          <Switch
            value={settings.sound}
            onValueChange={() => toggleSwitch("sound")}
            trackColor={{ false: "#ccc", true: "#2ECC71" }}
            thumbColor="#fff"
          />
        </View>
        <View style={styles.itemRow}>
          <Text style={styles.itemTitle}>Nh·∫≠n th√¥ng b√°o tr√™n thi·∫øt b·ªã</Text>
          <Switch
            value={settings.device}
            onValueChange={() => toggleSwitch("device")}
            trackColor={{ false: "#ccc", true: "#2ECC71" }}
            thumbColor="#fff"
          />
        </View>

        {/* Nh√≥m quan tr·ªçng */}
        <Text style={styles.section}>Th√¥ng b√°o quan tr·ªçng</Text>
        <SettingRow
          icon="card-outline"
          title="Giao d·ªãch nh√≥m"
          desc="C·∫≠p nh·∫≠t khi c√≥ th√†nh vi√™n th√™m, ch·ªânh s·ª≠a ho·∫∑c x√≥a chi ti√™u"
          value={settings.group}
          onToggle={() => toggleSwitch("group")}
        />
        <SettingRow
          icon="alarm-outline"
          title="Nh·∫Øc nh·ªü"
          desc="Khi ƒë·∫øn h·∫°n tr·∫£ n·ª£ ho·∫∑c ho√†n th√†nh nh·∫Øc nh·ªü giao d·ªãch"
          value={settings.reminder}
          onToggle={() => toggleSwitch("reminder")}
        />
        <SettingRow
          icon="shield-checkmark-outline"
          title="C·∫£nh b√°o b·∫£o m·∫≠t"
          desc="Th√¥ng b√°o khi ph√°t hi·ªán b·∫•t th∆∞·ªùng, y√™u c·∫ßu x√°c th·ª±c b·∫£o m·∫≠t"
          value={settings.security}
          onToggle={() => toggleSwitch("security")}
        />

        {/* Nh√≥m ∆∞u ƒë√£i */}
        <Text style={styles.section}>Th√¥ng b√°o ∆∞u ƒë√£i</Text>
        <SettingRow
          icon="gift-outline"
          title="∆Øu ƒë√£i d·ªãch v·ª•"
          desc="∆Øu ƒë√£i d·ªãch v·ª• b·∫°n ƒëang s·ª≠ d·ª•ng"
          value={settings.promo}
          onToggle={() => toggleSwitch("promo")}
        />
        <SettingRow
          icon="pricetag-outline"
          title="Voucher & m√£ gi·∫£m gi√°"
          desc="C·∫≠p nh·∫≠t voucher ∆∞u ƒë√£i nh√≥m c√≥ th·ªÉ √°p d·ª•ng trong d·ªãch v·ª• li√™n k·∫øt"
          value={settings.voucher}
          onToggle={() => toggleSwitch("voucher")}
        />
        <SettingRow
          icon="megaphone-outline"
          title="Qu·∫£ng c√°o"
          desc="C√°c th√¥ng b√°o qu·∫£ng c√°o kh√°c"
          value={settings.ads}
          onToggle={() => toggleSwitch("ads")}
        />

        {/* Nh√≥m t∆∞∆°ng t√°c */}
        <Text style={styles.section}>Th√¥ng b√°o t∆∞∆°ng t√°c</Text>
        <SettingRow
          icon="people-outline"
          title="B·∫°n b√® & nh√≥m"
          desc="T∆∞∆°ng t√°c v·ªõi b·∫°n b√® v√† c√°c nh√≥m c·ªßa b·∫°n"
          value={settings.friends}
          onToggle={() => toggleSwitch("friends")}
        />
        <SettingRow
          icon="swap-horizontal-outline"
          title="Thay ƒë·ªïi nh√≥m"
          desc="Khi nh√≥m ƒë·ªïi admin, ƒë·∫°i di·ªán, th√†nh vi√™n"
          value={settings.changeAdmin}
          onToggle={() => toggleSwitch("changeAdmin")}
        />
        <SettingRow
          icon="chatbox-ellipses-outline"
          title="Kh·∫£o s√°t & ph·∫£n h·ªìi"
          desc="Kh·∫£o s√°t, ph·∫£n h·ªìi d·ªãch v·ª• ho·∫∑c tr·∫£i nghi·ªám"
          value={settings.survey}
          onToggle={() => toggleSwitch("survey")}
        />

        {/* Footer: 2 n√∫t */}
        <View style={{ flexDirection: "row", justifyContent: "space-around", marginVertical: 20 }}>
          <TouchableOpacity style={styles.footerBtn} onPress={turnOffAll}>
            <Text style={styles.footerText}>T·∫Øt t·∫•t c·∫£</Text>
          </TouchableOpacity>
          <TouchableOpacity style={styles.footerBtn} onPress={turnOnAll}>
            <Text style={styles.footerText}>B·∫≠t t·∫•t c·∫£</Text>
          </TouchableOpacity>
        </View>
      </ScrollView>
    </SafeAreaView>
  );
}

// Component cho t·ª´ng d√≤ng setting
function SettingRow({ icon, title, desc, value, onToggle }) {
  return (
    <View style={styles.settingRow}>
      <Ionicons
        name={icon}
        size={22}
        color="#2ECC71"
        style={{ marginRight: 12 }}
      />
      <View style={{ flex: 1 }}>
        <Text style={styles.settingTitle}>{title}</Text>
        <Text style={styles.settingDesc}>{desc}</Text>
      </View>
      <Switch
        value={value}
        onValueChange={onToggle}
        trackColor={{ false: "#ccc", true: "#2ECC71" }}
        thumbColor="#fff"
      />
    </View>
  );
}
