import React, { useState, useRef, useEffect } from "react";
import { View, TouchableOpacity, StyleSheet, Text, Image } from "react-native";
import { CameraView, useCameraPermissions } from "expo-camera";
import { Ionicons } from "@expo/vector-icons";
import { router, useLocalSearchParams } from "expo-router"; // üëà Th√™m useLocalSearchParams
import AvatarDropdown from "../../components/AvatarDropdown";

export default function GroupCameraScreen() {
  const [permission, requestPermission] = useCameraPermissions();
  const [facing, setFacing] = useState("back");
  const cameraRef = useRef(null); // üëà th√™m ref

  // üëà L·∫•y params t·ª´ router
  const params = useLocalSearchParams();
  
  // üëà Log params khi nh·∫≠n ƒë∆∞·ª£c (khi m√†n h√¨nh mount ho·∫∑c params thay ƒë·ªïi)
  useEffect(() => {
    console.log("üì• Nh·∫≠n params ·ªü /group/camera:", params);
    // V√≠ d·ª•: N·∫øu c·∫ßn x·ª≠ l√Ω params (nh∆∞ fetch data d·ª±a tr√™n groupId), l√†m ·ªü ƒë√¢y
  }, [params]);

  if (!permission) return <View />;

  if (!permission.granted) {
    return (
      <View style={styles.center}>
        <Text>·ª®ng d·ª•ng c·∫ßn quy·ªÅn truy c·∫≠p camera</Text>
        <TouchableOpacity onPress={requestPermission}>
          <Text style={{ color: "#2ECC71", marginTop: 8 }}>C·∫•p quy·ªÅn</Text>
        </TouchableOpacity>
      </View>
    );
  }

  // üëá h√†m ch·ª•p v√† chuy·ªÉn sang preview (c√≥ th·ªÉ truy·ªÅn th√™m params n·∫øu c·∫ßn)
const takePhoto = async () => {
  if (cameraRef.current) {
    try {
      const photo = await cameraRef.current.takePictureAsync({
        quality: 1, // Ch·∫•t l∆∞·ª£ng cao nh·∫•t
        base64: false, // Kh√¥ng c·∫ßn base64, ch·ªâ URI
        exif: false, // T·∫Øt EXIF ƒë·ªÉ nh·∫π h∆°n
        skipProcessing: false, // ƒê·∫£m b·∫£o x·ª≠ l√Ω full
      });
      console.log("·∫¢nh ch·ª•p ƒë∆∞·ª£c:", photo.uri);

      router.push({
        pathname: "/group/preview",
        params: { 
          uri: photo.uri,
          groupId: params.groupId, 
          groupName: params.groupName,
          avatarUrl: params.avatarUrl,
        },
      });
    } catch (err) {
      console.error("L·ªói ch·ª•p ·∫£nh:", err);
      Alert.alert("L·ªói", "Kh√¥ng th·ªÉ ch·ª•p ·∫£nh");
    }
  }
};

  return (
    <View style={{ flex: 1, backgroundColor: "#A8F0C4" }}>
      {/* Header */}
      <View style={styles.header}>
        <TouchableOpacity onPress={() => router.push("/(tabs)/home")}>
          <Ionicons name="chevron-back" size={28} color="#000" />
        </TouchableOpacity>

        {/* V√≠ d·ª• s·ª≠ d·ª•ng params: Hi·ªÉn th·ªã groupName thay v√¨ avatar c·ª©ng */}
        <Text style={{ fontWeight: 'bold', fontSize: 16 }}>
          {params.groupName || "Camera Nh√≥m"}
        </Text>

        {/* N·∫øu v·∫´n mu·ªën AvatarDropdown, truy·ªÅn avatarUrl t·ª´ params n·∫øu c√≥ */}
        {/* <AvatarDropdown mainAvatar={params.avatarUrl || "https://randomuser.me/api/portraits/men/1.jpg"} /> */}
      </View>

      {/* Camera View */}
      <CameraView ref={cameraRef} style={styles.camera} facing={facing}>
        {/* Flash button g√≥c tr√™n ph·∫£i */}
        <TouchableOpacity style={styles.flashBtn}>
          <Ionicons name="flash-outline" size={28} color="#fff" />
        </TouchableOpacity>

        {/* N√∫t th∆∞ vi·ªán ·∫£nh (g√≥c d∆∞·ªõi tr√°i) */}
        <TouchableOpacity style={styles.bottomLeft}>
          <Ionicons name="images-outline" size={36} color="#fff" />
        </TouchableOpacity>

        {/* N√∫t ch·ª•p ·∫£nh ·ªü gi·ªØa */}
        <View style={styles.bottomCenter}>
          <TouchableOpacity style={styles.captureBtn} onPress={takePhoto}>
            <View style={styles.innerCircle} />
          </TouchableOpacity>
        </View>

        {/* N√∫t ƒë·ªïi camera (g√≥c d∆∞·ªõi ph·∫£i) */}
        <TouchableOpacity
          style={styles.bottomRight}
          onPress={() =>
            setFacing((prev) => (prev === "back" ? "front" : "back"))
          }
        >
          <Ionicons name="camera-reverse-outline" size={36} color="#fff" />
        </TouchableOpacity>
      </CameraView>

      {/* N√∫t +2 d∆∞·ªõi c√πng */}
      <TouchableOpacity style={styles.plusBtn}>
        <Text style={{ color: "#fff", fontSize: 18, fontWeight: "600" }}>
          +2
        </Text>
      </TouchableOpacity>
    </View>
  );
}

const styles = StyleSheet.create({
  center: {
    flex: 1,
    alignItems: "center",
    justifyContent: "center",
  },
  header: {
    flexDirection: "row",
    justifyContent: "space-between",
    alignItems: "center",
    paddingHorizontal: 16,
    paddingTop: 40, // ƒë·ªÉ tr√°nh notch
    paddingBottom: 10,
    backgroundColor: "#A8F0C4",
    zIndex: 1,
  },
  avatar: {
    width: 32,
    height: 32,
    borderRadius: 16,
  },
  camera: {
    flex: 1,
    borderRadius: 20,
    marginHorizontal: 10,
    overflow: "hidden",
  },
  flashBtn: {
    position: "absolute",
    top: 20,
    right: 20,
  },
  bottomLeft: {
    position: "absolute",
    bottom: 40,
    left: 30,
  },
  bottomCenter: {
    position: "absolute",
    bottom: 30,
    alignSelf: "center",
  },
  captureBtn: {
    width: 80,
    height: 80,
    borderRadius: 40,
    borderWidth: 6,
    borderColor: "#2ECC71",
    alignItems: "center",
    justifyContent: "center",
  },
  innerCircle: {
    width: 60,
    height: 60,
    borderRadius: 30,
    backgroundColor: "#fff",
  },
  bottomRight: {
    position: "absolute",
    bottom: 40,
    right: 30,
  },
  plusBtn: {
    alignSelf: "center",
    marginVertical: 10,
    backgroundColor: "#2ECC71",
    borderRadius: 20,
    paddingHorizontal: 20,
    paddingVertical: 6,
  },
});